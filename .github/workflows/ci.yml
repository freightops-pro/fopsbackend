name: Backend CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    name: Lint & Type Check
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort mypy
        pip install -r requirements.txt
    
    - name: Run Black (code formatter check)
      run: black --check app/
      continue-on-error: true
    
    - name: Run isort (import sorting check)
      run: isort --check-only app/
      continue-on-error: true
    
    - name: Run Flake8 (linter)
      run: flake8 app/ --max-line-length=120 --extend-ignore=E203,W503
      continue-on-error: true

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_freightops
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-asyncio
    
    - name: Run tests with coverage
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_freightops
        SECRET_KEY: test-secret-key-for-ci
      run: |
        pytest tests/ --cov=app --cov-report=xml --cov-report=html -v
      continue-on-error: true
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install safety bandit
    
    - name: Run Safety (dependency security check)
      run: safety check --json
      continue-on-error: true
    
    - name: Run Bandit (security linter)
      run: bandit -r app/ -f json -o bandit-report.json
      continue-on-error: true

  recurse-ml:
    name: Recurse ML Bug Detection
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for better analysis
    
    - name: Install Recurse ML
      run: |
        curl -fsSL install.recurse.ml | sh
        echo "$HOME/.rml/bin" >> $GITHUB_PATH
    
    - name: Run Recurse ML Analysis
      run: |
        rml --format github-actions
      continue-on-error: true
    
    - name: Upload RML Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: rml-report
        path: .rml-report.json
        retention-days: 30

  docker:
    name: Docker Build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: freightops-backend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

