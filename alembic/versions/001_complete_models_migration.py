"""Complete models migration

Revision ID: 001_complete_models
Revises: 
Create Date: 2024-01-01 12:00:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql, mysql, sqlite
from sqlalchemy import text

# revision identifiers, used by Alembic.
revision = '001_complete_models'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # Create companies table first (referenced by other tables)
    op.create_table('companies',
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('email', sa.String(), nullable=True),
        sa.Column('phone', sa.String(), nullable=True),
        sa.Column('address', sa.String(), nullable=True),
        sa.Column('city', sa.String(), nullable=True),
        sa.Column('state', sa.String(), nullable=True),
        sa.Column('zipCode', sa.String(), nullable=True),
        sa.Column('dotNumber', sa.String(), nullable=True),
        sa.Column('mcNumber', sa.String(), nullable=True),
        sa.Column('ein', sa.String(), nullable=True),
        sa.Column('businessType', sa.String(), nullable=True),
        sa.Column('yearsInBusiness', sa.Integer(), nullable=True),
        sa.Column('numberOfTrucks', sa.Integer(), nullable=True),
        sa.Column('walletBalance', sa.Numeric(), nullable=True, default=0),
        sa.Column('subscriptionStatus', sa.String(), nullable=True, default='trial'),
        sa.Column('subscriptionPlan', sa.String(), nullable=True, default='starter'),
        sa.Column('stripeCustomerId', sa.String(), nullable=True),
        sa.Column('railsrEnduserId', sa.String(), nullable=True),
        sa.Column('railsrLedgerId', sa.String(), nullable=True),
        sa.Column('bankAccountNumber', sa.String(), nullable=True),
        sa.Column('bankRoutingNumber', sa.String(), nullable=True),
        sa.Column('gustoCompanyId', sa.String(), nullable=True),
        sa.Column('gustoAccessToken', sa.String(), nullable=True),
        sa.Column('gustoRefreshToken', sa.String(), nullable=True),
        sa.Column('gustoTokenExpiry', sa.DateTime(), nullable=True),
        sa.Column('createdAt', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('updatedAt', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('isActive', sa.Boolean(), nullable=True, default=True),
        sa.Column('handlesContainers', sa.Boolean(), nullable=True, default=False),
        sa.Column('containerTrackingEnabled', sa.Boolean(), nullable=True, default=False),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_companies_id'), 'companies', ['id'], unique=False)
    op.create_index(op.f('ix_companies_email'), 'companies', ['email'], unique=True)

    # Create users table
    op.create_table('users',
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('email', sa.String(), nullable=True),
        sa.Column('firstname', sa.String(), nullable=True),
        sa.Column('lastname', sa.String(), nullable=True),
        sa.Column('password', sa.String(), nullable=False),
        sa.Column('phone', sa.String(), nullable=True),
        sa.Column('role', sa.String(), nullable=True, default='user'),
        sa.Column('companyid', sa.String(), nullable=True),
        sa.Column('isactive', sa.Boolean(), nullable=True, default=True),
        sa.Column('lastlogin', sa.DateTime(), nullable=True),
        sa.Column('createdat', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('updatedat', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.ForeignKeyConstraint(['companyid'], ['companies.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)

    # Create drivers table
    op.create_table('drivers',
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('companyId', sa.String(), nullable=False),
        sa.Column('firstName', sa.String(), nullable=False),
        sa.Column('lastName', sa.String(), nullable=False),
        sa.Column('email', sa.String(), nullable=False),
        sa.Column('phone', sa.String(), nullable=False),
        sa.Column('licenseNumber', sa.String(), nullable=False),
        sa.Column('licenseClass', sa.String(), nullable=False),
        sa.Column('licenseExpiry', sa.DateTime(), nullable=False),
        sa.Column('dateOfBirth', sa.DateTime(), nullable=False),
        sa.Column('address', sa.String(), nullable=False),
        sa.Column('city', sa.String(), nullable=False),
        sa.Column('state', sa.String(), nullable=False),
        sa.Column('zipCode', sa.String(), nullable=False),
        sa.Column('emergencyContact', sa.String(), nullable=False),
        sa.Column('emergencyPhone', sa.String(), nullable=False),
        sa.Column('hireDate', sa.DateTime(), nullable=False),
        sa.Column('status', sa.String(), nullable=True, server_default='available'),
        sa.Column('payRate', sa.Numeric(), nullable=False),
        sa.Column('payType', sa.String(), nullable=False),
        sa.Column('hoursRemaining', sa.Numeric(), nullable=True),
        sa.Column('currentLocation', sa.String(), nullable=True),
        sa.Column('passwordhash', sa.String(), nullable=True),
        sa.Column('isActive', sa.Boolean(), nullable=True, server_default='true'),
        sa.Column('createdAt', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('updatedAt', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.ForeignKeyConstraint(['companyId'], ['companies.id'], ),
        sa.PrimaryKeyConstraint('id')
    )

    # Create trucks table
    op.create_table('trucks',
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('companyId', sa.String(), nullable=False),
        sa.Column('truckNumber', sa.String(), nullable=False),
        sa.Column('make', sa.String(), nullable=False),
        sa.Column('model', sa.String(), nullable=False),
        sa.Column('year', sa.Integer(), nullable=False),
        sa.Column('vin', sa.String(), nullable=False),
        sa.Column('licensePlate', sa.String(), nullable=False),
        sa.Column('registrationState', sa.String(), nullable=True),
        sa.Column('status', sa.String(), nullable=True),
        sa.Column('createdAt', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('updatedAt', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('fuelType', sa.String(), nullable=True),
        sa.Column('fuelEfficiency', sa.Numeric(), nullable=True),
        sa.Column('maintenanceStatus', sa.String(), nullable=True),
        sa.Column('lastMaintenanceDate', sa.DateTime(), nullable=True),
        sa.Column('nextMaintenanceDate', sa.DateTime(), nullable=True),
        sa.Column('insuranceProvider', sa.String(), nullable=True),
        sa.Column('insurancePolicyNumber', sa.String(), nullable=True),
        sa.Column('insuranceExpiry', sa.DateTime(), nullable=True),
        sa.Column('isActive', sa.Boolean(), nullable=True, server_default='true'),
        sa.ForeignKeyConstraint(['companyId'], ['companies.id'], ),
        sa.PrimaryKeyConstraint('id')
    )

    # Create equipment table
    op.create_table('equipment',
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('companyId', sa.String(), nullable=False),
        sa.Column('equipmentNumber', sa.String(), nullable=False),
        sa.Column('equipmentType', sa.String(), nullable=False),
        sa.Column('make', sa.String(), nullable=False),
        sa.Column('model', sa.String(), nullable=False),
        sa.Column('year', sa.String(), nullable=False),
        sa.Column('vinNumber', sa.String(), nullable=False),
        sa.Column('plateNumber', sa.String(), nullable=True),
        sa.Column('currentMileage', sa.Integer(), nullable=True),
        sa.Column('engineType', sa.String(), nullable=True),
        sa.Column('fuelType', sa.String(), nullable=True, default='Diesel'),
        sa.Column('eldProvider', sa.String(), nullable=True),
        sa.Column('eldDeviceId', sa.String(), nullable=True),
        sa.Column('trailerType', sa.String(), nullable=True),
        sa.Column('trailerLength', sa.String(), nullable=True),
        sa.Column('maxWeight', sa.String(), nullable=True),
        sa.Column('registrationState', sa.String(), nullable=True),
        sa.Column('registrationExpiry', sa.DateTime(), nullable=True),
        sa.Column('insuranceProvider', sa.String(), nullable=True),
        sa.Column('insurancePolicyNumber', sa.String(), nullable=True),
        sa.Column('insuranceExpiry', sa.DateTime(), nullable=True),
        sa.Column('dotNumber', sa.String(), nullable=True),
        sa.Column('mcNumber', sa.String(), nullable=True),
        sa.Column('purchasePrice', sa.Numeric(), nullable=True),
        sa.Column('monthlyPayment', sa.Numeric(), nullable=True),
        sa.Column('assignedDriverId', sa.String(), nullable=True),
        sa.Column('homeTerminal', sa.String(), nullable=True),
        sa.Column('operationalStatus', sa.String(), nullable=True, default='active'),
        sa.Column('specialFeatures', sa.JSON(), nullable=True),
        sa.Column('additionalNotes', sa.Text(), nullable=True),
        sa.Column('status', sa.String(), nullable=True, default='available'),
        sa.Column('currentLocation', sa.String(), nullable=True),
        sa.Column('createdAt', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('updatedAt', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('isActive', sa.Boolean(), nullable=True, default=True),
        sa.ForeignKeyConstraint(['companyId'], ['companies.id'], ),
        sa.ForeignKeyConstraint(['assignedDriverId'], ['drivers.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('equipmentNumber'),
        sa.UniqueConstraint('vinNumber')
    )

    # Create employees table
    op.create_table('employees',
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('companyId', sa.String(), nullable=True),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('position', sa.String(), nullable=True),
        sa.Column('department', sa.String(), nullable=True),
        sa.Column('status', sa.String(), nullable=False, server_default='Active'),
        sa.Column('hireDate', sa.DateTime(), nullable=True),
        sa.Column('email', sa.String(), nullable=True),
        sa.Column('phone', sa.String(), nullable=True),
        sa.Column('cdlClass', sa.String(), nullable=True),
        sa.Column('experienceYears', sa.Integer(), nullable=True, server_default='0'),
        sa.Column('location', sa.String(), nullable=True),
        sa.Column('profileInitials', sa.String(), nullable=True),
        sa.Column('createdAt', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('updatedAt', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.ForeignKeyConstraint(['companyId'], ['companies.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_employees_id'), 'employees', ['id'], unique=False)
    op.create_index(op.f('ix_employees_companyId'), 'employees', ['companyId'], unique=False)
    op.create_index(op.f('ix_employees_name'), 'employees', ['name'], unique=False)
    op.create_index(op.f('ix_employees_position'), 'employees', ['position'], unique=False)
    op.create_index(op.f('ix_employees_department'), 'employees', ['department'], unique=False)
    op.create_index(op.f('ix_employees_status'), 'employees', ['status'], unique=False)
    op.create_index(op.f('ix_employees_hireDate'), 'employees', ['hireDate'], unique=False)
    op.create_index(op.f('ix_employees_email'), 'employees', ['email'], unique=True)

    # Create customers table
    op.create_table('customers',
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('companyId', sa.String(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('contactPerson', sa.String(), nullable=True),
        sa.Column('email', sa.String(), nullable=True),
        sa.Column('phone', sa.String(), nullable=True),
        sa.Column('address', sa.String(), nullable=True),
        sa.Column('city', sa.String(), nullable=True),
        sa.Column('state', sa.String(), nullable=True),
        sa.Column('zipCode', sa.String(), nullable=True),
        sa.Column('creditLimit', sa.Numeric(), nullable=True),
        sa.Column('paymentTerms', sa.Integer(), nullable=True),
        sa.Column('status', sa.String(), nullable=True, default='active'),
        sa.Column('totalRevenue', sa.Numeric(), nullable=True, default=0),
        sa.Column('lastOrder', sa.Date(), nullable=True),
        sa.Column('details', sa.JSON(), nullable=True),
        sa.Column('createdAt', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('updatedAt', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_customers_companyId'), 'customers', ['companyId'], unique=False)

    # Create vendors table
    op.create_table('vendors',
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('companyId', sa.String(), nullable=False),
        sa.Column('title', sa.String(), nullable=True),
        sa.Column('firstName', sa.String(), nullable=True),
        sa.Column('middleName', sa.String(), nullable=True),
        sa.Column('lastName', sa.String(), nullable=True),
        sa.Column('suffix', sa.String(), nullable=True),
        sa.Column('company', sa.String(), nullable=True),
        sa.Column('displayName', sa.String(), nullable=False),
        sa.Column('printOnCheck', sa.String(), nullable=True),
        sa.Column('address', sa.String(), nullable=True),
        sa.Column('city', sa.String(), nullable=True),
        sa.Column('state', sa.String(), nullable=True),
        sa.Column('zipCode', sa.String(), nullable=True),
        sa.Column('country', sa.String(), nullable=True),
        sa.Column('email', sa.String(), nullable=True),
        sa.Column('phone', sa.String(), nullable=True),
        sa.Column('mobile', sa.String(), nullable=True),
        sa.Column('fax', sa.String(), nullable=True),
        sa.Column('other', sa.String(), nullable=True),
        sa.Column('website', sa.String(), nullable=True),
        sa.Column('billingRate', sa.Numeric(), nullable=True),
        sa.Column('terms', sa.String(), nullable=True),
        sa.Column('openingBalance', sa.Numeric(), nullable=True),
        sa.Column('balanceAsOf', sa.Date(), nullable=True),
        sa.Column('accountNumber', sa.String(), nullable=True),
        sa.Column('taxId', sa.String(), nullable=True),
        sa.Column('trackPaymentsFor1099', sa.Boolean(), nullable=True, default=False),
        sa.Column('isActive', sa.Boolean(), nullable=True, default=True),
        sa.Column('createdAt', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('updatedAt', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vendors_companyId'), 'vendors', ['companyId'], unique=False)

    # Create bills table
    op.create_table('bills',
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('companyId', sa.String(), nullable=False),
        sa.Column('vendorId', sa.String(), nullable=True),
        sa.Column('vendorName', sa.String(), nullable=False),
        sa.Column('amount', sa.Numeric(), nullable=False),
        sa.Column('billDate', sa.Date(), nullable=True),
        sa.Column('dueDate', sa.Date(), nullable=True),
        sa.Column('category', sa.String(), nullable=True),
        sa.Column('status', sa.String(), nullable=True, default='pending'),
        sa.Column('notes', sa.String(), nullable=True),
        sa.Column('createdAt', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('updatedAt', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.ForeignKeyConstraint(['vendorId'], ['vendors.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bills_companyId'), 'bills', ['companyId'], unique=False)
    op.create_index(op.f('ix_bills_vendorId'), 'bills', ['vendorId'], unique=False)

    # Create invoices table
    op.create_table('invoices',
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('companyId', sa.String(), nullable=False),
        sa.Column('invoiceNumber', sa.String(), nullable=False),
        sa.Column('invoiceDate', sa.Date(), nullable=False),
        sa.Column('consigneePO', sa.String(), nullable=True),
        sa.Column('shipperBL', sa.String(), nullable=True),
        sa.Column('shippingSCAC', sa.String(), nullable=True),
        sa.Column('paymentMethod', sa.String(), nullable=True, default='prepaid'),
        sa.Column('deliveryDate', sa.Date(), nullable=True),
        sa.Column('actualPickupDate', sa.Date(), nullable=True),
        sa.Column('transportationMethod', sa.String(), nullable=True, default='ltl'),
        sa.Column('currencyCode', sa.String(), nullable=True, default='USD'),
        sa.Column('billToName', sa.String(), nullable=False),
        sa.Column('billToAddress', sa.Text(), nullable=False),
        sa.Column('billToCodeType', sa.String(), nullable=True, default='assigned_by_buyer'),
        sa.Column('billToCode', sa.String(), nullable=True),
        sa.Column('shipperName', sa.String(), nullable=False),
        sa.Column('shipperAddress', sa.Text(), nullable=False),
        sa.Column('shipperCodeType', sa.String(), nullable=True, default='assigned_by_buyer'),
        sa.Column('shipperCode', sa.String(), nullable=True),
        sa.Column('consigneeName', sa.String(), nullable=False),
        sa.Column('consigneeAddress', sa.Text(), nullable=False),
        sa.Column('consigneeCodeType', sa.String(), nullable=True, default='assigned_by_buyer'),
        sa.Column('consigneeCode', sa.String(), nullable=True),
        sa.Column('lineItems', sa.JSON(), nullable=False, default=list),
        sa.Column('routingSequenceCode', sa.String(), nullable=True, default='origin_carrier'),
        sa.Column('cityOfExchange', sa.String(), nullable=True),
        sa.Column('equipmentInitial', sa.String(), nullable=True),
        sa.Column('equipmentNumber', sa.String(), nullable=True),
        sa.Column('ladingQty', sa.String(), nullable=True),
        sa.Column('ladingQtyUOM', sa.String(), nullable=True, default='pounds'),
        sa.Column('totalWeight', sa.String(), nullable=True),
        sa.Column('totalWeightUOM', sa.String(), nullable=True, default='gross_weight'),
        sa.Column('status', sa.String(), nullable=True, default='draft'),
        sa.Column('totalAmount', sa.Numeric(), nullable=False),
        sa.Column('notes', sa.Text(), nullable=True),
        sa.Column('createdAt', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('updatedAt', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_invoices_companyId'), 'invoices', ['companyId'], unique=False)
    op.create_index(op.f('ix_invoices_invoiceNumber'), 'invoices', ['invoiceNumber'], unique=False)

    # Create documents table
    op.create_table('documents',
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('companyId', sa.String(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('type', sa.String(), nullable=False),
        sa.Column('category', sa.String(), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('fileName', sa.String(), nullable=False),
        sa.Column('fileSize', sa.Integer(), nullable=True),
        sa.Column('fileType', sa.String(), nullable=True),
        sa.Column('filePath', sa.String(), nullable=True),
        sa.Column('employeeId', sa.String(), nullable=True),
        sa.Column('employeeName', sa.String(), nullable=True),
        sa.Column('status', sa.String(), nullable=True, default='Active'),
        sa.Column('uploadDate', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('expiryDate', sa.DateTime(), nullable=True),
        sa.Column('details', sa.JSON(), nullable=True),
        sa.Column('createdAt', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('updatedAt', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_documents_companyId'), 'documents', ['companyId'], unique=False)
    op.create_index(op.f('ix_documents_employeeId'), 'documents', ['employeeId'], unique=False)

    # Create simple_loads table
    op.create_table('simple_loads',
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('companyId', sa.String(), nullable=False),
        sa.Column('loadNumber', sa.String(), nullable=False),
        sa.Column('customerName', sa.String(), nullable=False),
        sa.Column('pickupLocation', sa.String(), nullable=False),
        sa.Column('deliveryLocation', sa.String(), nullable=False),
        sa.Column('pickupDate', sa.DateTime(), nullable=True),
        sa.Column('deliveryDate', sa.DateTime(), nullable=True),
        sa.Column('pickuptime', sa.DateTime(), nullable=True),
        sa.Column('deliverytime', sa.DateTime(), nullable=True),
        sa.Column('rate', sa.Numeric(), nullable=True, default=0),
        sa.Column('notes', sa.String(), nullable=True),
        sa.Column('status', sa.String(), nullable=True, default='pending'),
        sa.Column('priority', sa.String(), nullable=True, default='normal'),
        sa.Column('assignedDriverId', sa.String(), nullable=True),
        sa.Column('assignedTruckId', sa.String(), nullable=True),
        sa.Column('truckAssignmentStatus', sa.String(), nullable=True, default='truck_assignment_required'),
        sa.Column('truckAssignmentTime', sa.DateTime(), nullable=True),
        sa.Column('driverConfirmationTime', sa.DateTime(), nullable=True),
        sa.Column('trailerSetupTime', sa.DateTime(), nullable=True),
        sa.Column('truckConfirmationTime', sa.DateTime(), nullable=True),
        sa.Column('pickupStatus', sa.String(), nullable=True, default='pending'),
        sa.Column('navigationStartTime', sa.DateTime(), nullable=True),
        sa.Column('pickupArrivalTime', sa.DateTime(), nullable=True),
        sa.Column('trailerConfirmationTime', sa.DateTime(), nullable=True),
        sa.Column('containerConfirmationTime', sa.DateTime(), nullable=True),
        sa.Column('pickupConfirmationTime', sa.DateTime(), nullable=True),
        sa.Column('departureTime', sa.DateTime(), nullable=True),
        sa.Column('billOfLadingUrl', sa.String(), nullable=True),
        sa.Column('pickupNotes', sa.String(), nullable=True),
        sa.Column('deliveryStatus', sa.String(), nullable=True, default='in_transit'),
        sa.Column('arrivalTime', sa.DateTime(), nullable=True),
        sa.Column('dockingTime', sa.DateTime(), nullable=True),
        sa.Column('unloadingStartTime', sa.DateTime(), nullable=True),
        sa.Column('unloadingEndTime', sa.DateTime(), nullable=True),
        sa.Column('deliveryTime', sa.DateTime(), nullable=True),
        sa.Column('proofOfDeliveryUrl', sa.String(), nullable=True),
        sa.Column('recipientName', sa.String(), nullable=True),
        sa.Column('deliveryNotes', sa.String(), nullable=True),
        sa.Column('meta', sa.JSON(), nullable=True),
        sa.Column('createdAt', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('updatedAt', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('isActive', sa.Boolean(), nullable=True, default=True),
        sa.PrimaryKeyConstraint('id')
    )

    # Create loads table
    op.create_table('loads',
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('companyId', sa.String(), nullable=False),
        sa.Column('loadNumber', sa.String(), nullable=False),
        sa.Column('status', sa.String(), nullable=True, default='available'),
        sa.Column('priority', sa.String(), nullable=True, default='standard'),
        sa.Column('customerName', sa.String(), nullable=False),
        sa.Column('customerContact', sa.String(), nullable=False),
        sa.Column('customerPhone', sa.String(), nullable=False),
        sa.Column('customerEmail', sa.String(), nullable=False),
        sa.Column('pickupLocation', sa.String(), nullable=False),
        sa.Column('pickupAddress', sa.String(), nullable=False),
        sa.Column('pickupCity', sa.String(), nullable=False),
        sa.Column('pickupState', sa.String(), nullable=False),
        sa.Column('pickupZip', sa.String(), nullable=False),
        sa.Column('pickupDate', sa.String(), nullable=False),
        sa.Column('pickupTime', sa.String(), nullable=False),
        sa.Column('pickupWindow', sa.String(), nullable=False),
        sa.Column('pickupContact', sa.String(), nullable=False),
        sa.Column('pickupPhone', sa.String(), nullable=False),
        sa.Column('pickupInstructions', sa.String(), nullable=False),
        sa.Column('deliveryLocation', sa.String(), nullable=False),
        sa.Column('deliveryAddress', sa.String(), nullable=False),
        sa.Column('deliveryCity', sa.String(), nullable=False),
        sa.Column('deliveryState', sa.String(), nullable=False),
        sa.Column('deliveryZip', sa.String(), nullable=False),
        sa.Column('deliveryDate', sa.String(), nullable=False),
        sa.Column('deliveryTime', sa.String(), nullable=False),
        sa.Column('deliveryWindow', sa.String(), nullable=False),
        sa.Column('deliveryContact', sa.String(), nullable=False),
        sa.Column('deliveryPhone', sa.String(), nullable=False),
        sa.Column('deliveryInstructions', sa.String(), nullable=False),
        sa.Column('commodity', sa.String(), nullable=False),
        sa.Column('commodityType', sa.String(), nullable=True, default='general_freight'),
        sa.Column('weight', sa.Integer(), nullable=False),
        sa.Column('pieces', sa.Integer(), nullable=False),
        sa.Column('length', sa.Numeric(), nullable=False),
        sa.Column('width', sa.Numeric(), nullable=False),
        sa.Column('height', sa.Numeric(), nullable=False),
        sa.Column('specialRequirements', sa.String(), nullable=False),
        sa.Column('rate', sa.Numeric(), nullable=False),
        sa.Column('rateType', sa.String(), nullable=True, default='flat'),
        sa.Column('fuelSurcharge', sa.Numeric(), nullable=True, default='0'),
        sa.Column('accessorialCharges', sa.Numeric(), nullable=True, default='0'),
        sa.Column('totalRate', sa.Numeric(), nullable=False),
        sa.Column('fuelCost', sa.Numeric(), nullable=True, default='0'),
        sa.Column('driverPay', sa.Numeric(), nullable=True, default='0'),
        sa.Column('distance', sa.Integer(), nullable=False),
        sa.Column('estimatedMiles', sa.Integer(), nullable=False),
        sa.Column('estimatedDuration', sa.Integer(), nullable=False),
        sa.Column('assignedDriverId', sa.String(), nullable=False),
        sa.Column('assignedTruckId', sa.String(), nullable=False),
        sa.Column('dispatchNotes', sa.String(), nullable=False),
        sa.Column('lastUpdate', sa.String(), nullable=False),
        sa.Column('estimatedArrival', sa.String(), nullable=False),
        sa.Column('proofOfDelivery', sa.String(), nullable=False),
        sa.Column('trailerType', sa.String(), nullable=False),
        sa.Column('loadCommodity', sa.String(), nullable=False),
        sa.Column('isContainerLoad', sa.Boolean(), nullable=True, default=False),
        sa.Column('containerNumber', sa.String(), nullable=True),
        sa.Column('bolNumber', sa.String(), nullable=True),
        sa.Column('lfsNumber', sa.String(), nullable=True),
        sa.Column('ssl', sa.String(), nullable=True),
        sa.Column('vesselName', sa.String(), nullable=True),
        sa.Column('portOfLoading', sa.String(), nullable=True),
        sa.Column('portOfDischarge', sa.String(), nullable=True),
        sa.Column('containerSize', sa.String(), nullable=True),
        sa.Column('grossWeight', sa.Integer(), nullable=True),
        sa.Column('hazmat', sa.Boolean(), nullable=True, default=False),
        sa.Column('containerCurrentLocation', sa.String(), nullable=True),
        sa.Column('isCustomerHold', sa.Boolean(), nullable=True, default=False),
        sa.Column('isAvailableForPickup', sa.Boolean(), nullable=True, default=True),
        sa.Column('chassisRequired', sa.Boolean(), nullable=True, default=False),
        sa.Column('chassisId', sa.String(), nullable=True),
        sa.Column('chassisType', sa.String(), nullable=True),
        sa.Column('chassisProvider', sa.String(), nullable=True),
        sa.Column('chassisFreeDays', sa.Integer(), nullable=True, default=3),
        sa.Column('chassisPerDiemRate', sa.Numeric(), nullable=True, default='0'),
        sa.Column('containerFreeDays', sa.Integer(), nullable=True, default=5),
        sa.Column('containerDemurrageRate', sa.Numeric(), nullable=True, default='0'),
        sa.Column('expressPassRequired', sa.Boolean(), nullable=True, default=False),
        sa.Column('terminal', sa.String(), nullable=True),
        sa.Column('temperature', sa.Integer(), nullable=True),
        sa.Column('isFSMACompliant', sa.Boolean(), nullable=True, default=False),
        sa.Column('preloadChecklistComplete', sa.Boolean(), nullable=True, default=False),
        sa.Column('liquidType', sa.String(), nullable=True),
        sa.Column('washType', sa.String(), nullable=True),
        sa.Column('volume', sa.Integer(), nullable=True),
        sa.Column('loadLength', sa.Numeric(), nullable=True),
        sa.Column('loadWidth', sa.Numeric(), nullable=True),
        sa.Column('loadHeight', sa.Numeric(), nullable=True),
        sa.Column('tarpRequired', sa.Boolean(), nullable=True, default=False),
        sa.Column('securementType', sa.String(), nullable=True),
        sa.Column('palletCount', sa.Integer(), nullable=True),
        sa.Column('isStackable', sa.Boolean(), nullable=True, default=True),
        sa.Column('sealNumber', sa.String(), nullable=True),
        sa.Column('railCarNumber', sa.String(), nullable=True),
        sa.Column('portCode', sa.String(), nullable=True),
        sa.Column('railroad', sa.String(), nullable=True),
        sa.Column('chassisNumber', sa.String(), nullable=True),
        sa.Column('steamshipLine', sa.String(), nullable=True),
        sa.Column('bookingNumber', sa.String(), nullable=True),
        sa.Column('billOfLading', sa.String(), nullable=True),
        sa.Column('containerType', sa.String(), nullable=True),
        sa.Column('temperatureSettings', sa.String(), nullable=True),
        sa.Column('intermodalTracking', sa.String(), nullable=True),
        sa.Column('lastPortUpdate', sa.String(), nullable=True),
        sa.Column('lastRailUpdate', sa.String(), nullable=True),
        sa.Column('isMultiDriverLoad', sa.Boolean(), nullable=True, default=False),
        sa.Column('dispatchStatus', sa.String(), nullable=True, default='planning'),
        sa.Column('createdAt', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('updatedAt', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('dispatchedAt', sa.DateTime(), nullable=True),
        sa.Column('pickedUpAt', sa.DateTime(), nullable=True),
        sa.Column('deliveredAt', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['companyId'], ['companies.id'], ),
        sa.ForeignKeyConstraint(['assignedDriverId'], ['drivers.id'], ),
        sa.ForeignKeyConstraint(['assignedTruckId'], ['trucks.id'], ),
        sa.PrimaryKeyConstraint('id')
    )

    # Create dispatch_legs table
    op.create_table('dispatch_legs',
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('load_id', sa.String(), nullable=False),
        sa.Column('company_id', sa.String(), nullable=False),
        sa.Column('driver_id', sa.String(), nullable=True),
        sa.Column('truck_id', sa.String(), nullable=True),
        sa.Column('trailer_id', sa.String(), nullable=True),
        sa.Column('chassis_id', sa.String(), nullable=True),
        sa.Column('action_type', sa.String(), nullable=False),
        sa.Column('location', sa.Text(), nullable=False),
        sa.Column('eta', sa.DateTime(), nullable=True),
        sa.Column('etd', sa.DateTime(), nullable=True),
        sa.Column('actual_arrival', sa.DateTime(), nullable=True),
        sa.Column('actual_departure', sa.DateTime(), nullable=True),
        sa.Column('completed', sa.Boolean(), nullable=True, default=False),
        sa.Column('leg_order', sa.Integer(), nullable=False),
        sa.Column('notes', sa.Text(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('updated_at', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.ForeignKeyConstraint(['load_id'], ['loads.id'], ),
        sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
        sa.ForeignKeyConstraint(['driver_id'], ['drivers.id'], ),
        sa.ForeignKeyConstraint(['truck_id'], ['trucks.id'], ),
        sa.PrimaryKeyConstraint('id')
    )

    # Create load_assignments table
    op.create_table('load_assignments',
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('load_id', sa.String(), nullable=False),
        sa.Column('company_id', sa.String(), nullable=False),
        sa.Column('driver_id', sa.String(), nullable=False),
        sa.Column('truck_id', sa.String(), nullable=True),
        sa.Column('trailer_id', sa.String(), nullable=True),
        sa.Column('start_time', sa.DateTime(), nullable=True),
        sa.Column('end_time', sa.DateTime(), nullable=True),
        sa.Column('assignment_notes', sa.Text(), nullable=True),
        sa.Column('status', sa.String(), nullable=True, default='assigned'),
        sa.Column('created_at', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('updated_at', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.ForeignKeyConstraint(['load_id'], ['loads.id'], ),
        sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
        sa.ForeignKeyConstraint(['driver_id'], ['drivers.id'], ),
        sa.ForeignKeyConstraint(['truck_id'], ['trucks.id'], ),
        sa.PrimaryKeyConstraint('id')
    )

    # Create load_billing table
    op.create_table('load_billing',
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('load_id', sa.String(), nullable=False),
        sa.Column('company_id', sa.String(), nullable=False),
        sa.Column('base_rate', sa.Numeric(10, 2), nullable=False),
        sa.Column('rate_type', sa.String(), nullable=True, default='flat'),
        sa.Column('rate_per_mile', sa.Numeric(8, 2), nullable=True),
        sa.Column('total_miles', sa.Integer(), nullable=True),
        sa.Column('billing_status', sa.String(), nullable=True, default='pending'),
        sa.Column('invoice_number', sa.String(), nullable=True),
        sa.Column('invoice_date', sa.DateTime(), nullable=True),
        sa.Column('due_date', sa.DateTime(), nullable=True),
        sa.Column('paid_date', sa.DateTime(), nullable=True),
        sa.Column('customer_name', sa.String(), nullable=False),
        sa.Column('customer_address', sa.Text(), nullable=True),
        sa.Column('customer_terms', sa.String(), nullable=True, default='NET30'),
        sa.Column('subtotal', sa.Numeric(10, 2), nullable=True, default=0),
        sa.Column('total_accessorials', sa.Numeric(10, 2), nullable=True, default=0),
        sa.Column('total_expenses', sa.Numeric(10, 2), nullable=True, default=0),
        sa.Column('tax_amount', sa.Numeric(10, 2), nullable=True, default=0),
        sa.Column('total_amount', sa.Numeric(10, 2), nullable=True, default=0),
        sa.Column('payment_method', sa.String(), nullable=True),
        sa.Column('factor_company', sa.String(), nullable=True),
        sa.Column('factor_rate', sa.Numeric(5, 2), nullable=True),
        sa.Column('billing_notes', sa.Text(), nullable=True),
        sa.Column('internal_notes', sa.Text(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('updated_at', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('created_by', sa.String(), nullable=True),
        sa.Column('last_modified_by', sa.String(), nullable=True),
        sa.ForeignKeyConstraint(['load_id'], ['loads.id'], ),
        sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['last_modified_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )

    # Create load_accessorials table
    op.create_table('load_accessorials',
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('load_id', sa.String(), nullable=False),
        sa.Column('billing_id', sa.String(), nullable=False),
        sa.Column('company_id', sa.String(), nullable=False),
        sa.Column('type', sa.String(), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('amount', sa.Numeric(8, 2), nullable=False),
        sa.Column('quantity', sa.Numeric(8, 2), nullable=True, default=1),
        sa.Column('rate', sa.Numeric(8, 2), nullable=True),
        sa.Column('is_billable', sa.Boolean(), nullable=True, default=True),
        sa.Column('customer_approved', sa.Boolean(), nullable=True, default=False),
        sa.Column('approval_date', sa.DateTime(), nullable=True),
        sa.Column('approved_by', sa.String(), nullable=True),
        sa.Column('documentation', sa.JSON(), nullable=True),
        sa.Column('notes', sa.Text(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('updated_at', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('created_by', sa.String(), nullable=True),
        sa.ForeignKeyConstraint(['load_id'], ['loads.id'], ),
        sa.ForeignKeyConstraint(['billing_id'], ['load_billing.id'], ),
        sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )

    # Create employee_benefits table
    op.create_table('employee_benefits',
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('employeeId', sa.String(), nullable=False),
        sa.Column('effectiveDate', sa.String(), nullable=True),
        sa.Column('enrollmentType', sa.String(), nullable=True),
        sa.Column('healthPlan', sa.String(), nullable=True),
        sa.Column('healthCoverageLevel', sa.String(), nullable=True),
        sa.Column('dentalPlan', sa.String(), nullable=True),
        sa.Column('dentalCoverageLevel', sa.String(), nullable=True),
        sa.Column('visionPlan', sa.String(), nullable=True),
        sa.Column('visionCoverageLevel', sa.String(), nullable=True),
        sa.Column('lifeInsuranceAmount', sa.String(), nullable=True),
        sa.Column('adAndDInsurance', sa.Integer(), nullable=True),
        sa.Column('retirement401kContribution', sa.String(), nullable=True),
        sa.Column('rothContribution', sa.String(), nullable=True),
        sa.Column('healthSavingsAccount', sa.String(), nullable=True),
        sa.Column('dependentCareAccount', sa.String(), nullable=True),
        sa.Column('voluntaryBenefits', sa.String(), nullable=True),
        sa.Column('lifeEventReason', sa.String(), nullable=True),
        sa.Column('createdAt', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('updatedAt', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.ForeignKeyConstraint(['employeeId'], ['employees.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_employee_benefits_id'), 'employee_benefits', ['id'], unique=False)
    op.create_index(op.f('ix_employee_benefits_employeeId'), 'employee_benefits', ['employeeId'], unique=False)

    # Create payroll_runs table
    op.create_table('payroll_runs',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('pay_period_start', sa.Date(), nullable=False),
        sa.Column('pay_period_end', sa.Date(), nullable=False),
        sa.Column('pay_date', sa.Date(), nullable=False),
        sa.Column('payroll_type', sa.String(), nullable=False, default='regular'),
        sa.Column('departments', sa.Text(), nullable=False),
        sa.Column('notes', sa.Text(), nullable=True),
        sa.Column('status', sa.String(), nullable=False, default='Draft'),
        sa.Column('created_at', sa.DateTime(), nullable=True, default=sa.text('CURRENT_TIMESTAMP')),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_payroll_runs_id'), 'payroll_runs', ['id'], unique=False)

    # Create payroll_entries table
    op.create_table('payroll_entries',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('run_id', sa.Integer(), nullable=False),
        sa.Column('employee_id', sa.String(), nullable=False),
        sa.Column('employee_name', sa.String(), nullable=False),
        sa.Column('position', sa.String(), nullable=True),
        sa.Column('department', sa.String(), nullable=True),
        sa.Column('hourly_rate', sa.Float(), nullable=True, default=25.0),
        sa.Column('regular_hours', sa.Float(), nullable=True, default=0),
        sa.Column('overtime_hours', sa.Float(), nullable=True, default=0),
        sa.Column('bonus_amount', sa.Float(), nullable=True, default=0),
        sa.Column('mileage', sa.Float(), nullable=True, default=0),
        sa.Column('per_diem', sa.Float(), nullable=True, default=0),
        sa.Column('gross_pay', sa.Float(), nullable=True, default=0),
        sa.Column('federal_tax', sa.Float(), nullable=True, default=0),
        sa.Column('state_tax', sa.Float(), nullable=True, default=0),
        sa.Column('fica_tax', sa.Float(), nullable=True, default=0),
        sa.Column('health_insurance', sa.Float(), nullable=True, default=0),
        sa.Column('retirement_401k', sa.Float(), nullable=True, default=0),
        sa.Column('other_deductions', sa.Float(), nullable=True, default=0),
        sa.Column('total_deductions', sa.Float(), nullable=True, default=0),
        sa.Column('net_pay', sa.Float(), nullable=True, default=0),
        sa.Column('status', sa.String(), nullable=True, default='Pending'),
        sa.Column('pay_period', sa.String(), nullable=True),
        sa.Column('has_w2', sa.Integer(), nullable=True, default=1),
        sa.Column('has_1099', sa.Integer(), nullable=True, default=0),
        sa.ForeignKeyConstraint(['run_id'], ['payroll_runs.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_payroll_entries_id'), 'payroll_entries', ['id'], unique=False)
    op.create_index(op.f('ix_payroll_entries_run_id'), 'payroll_entries', ['run_id'], unique=False)
    op.create_index(op.f('ix_payroll_entries_employee_id'), 'payroll_entries', ['employee_id'], unique=False)

    # Create overtime_approvals table
    op.create_table('overtime_approvals',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('employee_id', sa.String(), nullable=False),
        sa.Column('overtime_hours', sa.Float(), nullable=False),
        sa.Column('overtime_rate', sa.Float(), nullable=False),
        sa.Column('approval_reason', sa.Text(), nullable=False),
        sa.Column('week_ending', sa.Date(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=True, default=sa.text('CURRENT_TIMESTAMP')),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_overtime_approvals_id'), 'overtime_approvals', ['id'], unique=False)
    op.create_index(op.f('ix_overtime_approvals_employee_id'), 'overtime_approvals', ['employee_id'], unique=False)

    # Create bonus_payments table
    op.create_table('bonus_payments',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('bonus_type', sa.String(), nullable=False),
        sa.Column('tax_withholding', sa.String(), nullable=False),
        sa.Column('bonus_amount', sa.Float(), nullable=False),
        sa.Column('bonus_reason', sa.Text(), nullable=False),
        sa.Column('effective_date', sa.Date(), nullable=False),
        sa.Column('employee_ids_json', sa.Text(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=True, default=sa.text('CURRENT_TIMESTAMP')),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bonus_payments_id'), 'bonus_payments', ['id'], unique=False)

    # Create driver_settlements table
    op.create_table('driver_settlements',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('driver_id', sa.String(), nullable=False),
        sa.Column('settlement_period', sa.String(), nullable=False),
        sa.Column('total_miles', sa.Float(), nullable=False),
        sa.Column('mileage_rate', sa.Float(), nullable=False),
        sa.Column('detention_hours', sa.Float(), nullable=True),
        sa.Column('detention_rate', sa.Float(), nullable=True),
        sa.Column('fuel_surcharge', sa.Float(), nullable=True),
        sa.Column('other_deductions', sa.Float(), nullable=True),
        sa.Column('notes', sa.Text(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True, default=sa.text('CURRENT_TIMESTAMP')),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_driver_settlements_id'), 'driver_settlements', ['id'], unique=False)
    op.create_index(op.f('ix_driver_settlements_driver_id'), 'driver_settlements', ['driver_id'], unique=False)

    # Create onboarding_flows table
    op.create_table('onboarding_flows',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('employee_id', sa.String(), nullable=False),
        sa.Column('employee_name', sa.String(), nullable=False),
        sa.Column('position', sa.String(), nullable=True),
        sa.Column('started_at', sa.DateTime(), nullable=True, default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('completed_at', sa.DateTime(), nullable=True),
        sa.Column('status', sa.String(), nullable=True, default='In Progress'),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_onboarding_flows_id'), 'onboarding_flows', ['id'], unique=False)

    # Create onboarding_tasks table
    op.create_table('onboarding_tasks',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('flow_id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('order', sa.Integer(), nullable=False),
        sa.Column('completed', sa.Boolean(), nullable=True, default=False),
        sa.Column('completed_at', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['flow_id'], ['onboarding_flows.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_onboarding_tasks_id'), 'onboarding_tasks', ['id'], unique=False)

    # Create maintenance_schedule table
    op.create_table('maintenance_schedule',
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('companyId', sa.String(), nullable=False),
        sa.Column('equipmentId', sa.String(), nullable=False),
        sa.Column('title', sa.String(), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('maintenanceType', sa.String(), nullable=False),
        sa.Column('priority', sa.String(), nullable=True, default='medium'),
        sa.Column('scheduledDate', sa.DateTime(), nullable=False),
        sa.Column('estimatedDuration', sa.Integer(), nullable=True),
        sa.Column('estimatedCost', sa.Numeric(), nullable=True),
        sa.Column('isRecurring', sa.Boolean(), nullable=True, default=False),
        sa.Column('recurrenceType', sa.String(), nullable=True),
        sa.Column('recurrenceInterval', sa.Integer(), nullable=True),
        sa.Column('nextOccurrence', sa.DateTime(), nullable=True),
        sa.Column('status', sa.String(), nullable=True, default='scheduled'),
        sa.Column('actualStartDate', sa.DateTime(), nullable=True),
        sa.Column('actualEndDate', sa.DateTime(), nullable=True),
        sa.Column('actualCost', sa.Numeric(), nullable=True),
        sa.Column('assignedTechnician', sa.String(), nullable=True),
        sa.Column('assignedVendor', sa.String(), nullable=True),
        sa.Column('vendorContact', sa.String(), nullable=True),
        sa.Column('vendorPhone', sa.String(), nullable=True),
        sa.Column('location', sa.String(), nullable=True),
        sa.Column('notes', sa.Text(), nullable=True),
        sa.Column('attachments', sa.JSON(), nullable=True),
        sa.Column('createdAt', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('updatedAt', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('createdBy', sa.String(), nullable=True),
        sa.Column('isActive', sa.Boolean(), nullable=True, default=True),
        sa.ForeignKeyConstraint(['companyId'], ['companies.id'], ),
        sa.ForeignKeyConstraint(['equipmentId'], ['equipment.id'], ),
        sa.ForeignKeyConstraint(['createdBy'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )

    # Create eld_alerts table
    op.create_table('eld_alerts',
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('companyId', sa.String(), nullable=False),
        sa.Column('equipmentId', sa.String(), nullable=False),
        sa.Column('driverId', sa.String(), nullable=True),
        sa.Column('alertType', sa.String(), nullable=False),
        sa.Column('severity', sa.String(), nullable=True, default='medium'),
        sa.Column('title', sa.String(), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('alertData', sa.JSON(), nullable=True),
        sa.Column('location', sa.String(), nullable=True),
        sa.Column('status', sa.String(), nullable=True, default='active'),
        sa.Column('acknowledgedBy', sa.String(), nullable=True),
        sa.Column('acknowledgedAt', sa.DateTime(), nullable=True),
        sa.Column('resolvedBy', sa.String(), nullable=True),
        sa.Column('resolvedAt', sa.DateTime(), nullable=True),
        sa.Column('createdAt', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('updatedAt', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('isActive', sa.Boolean(), nullable=True, default=True),
        sa.ForeignKeyConstraint(['companyId'], ['companies.id'], ),
        sa.ForeignKeyConstraint(['equipmentId'], ['equipment.id'], ),
        sa.ForeignKeyConstraint(['driverId'], ['drivers.id'], ),
        sa.ForeignKeyConstraint(['acknowledgedBy'], ['users.id'], ),
        sa.ForeignKeyConstraint(['resolvedBy'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )

    # Create road_services table
    op.create_table('road_services',
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('companyId', sa.String(), nullable=False),
        sa.Column('equipmentId', sa.String(), nullable=False),
        sa.Column('driverId', sa.String(), nullable=True),
        sa.Column('serviceType', sa.String(), nullable=False),
        sa.Column('priority', sa.String(), nullable=True, default='medium'),
        sa.Column('title', sa.String(), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('location', sa.String(), nullable=False),
        sa.Column('latitude', sa.Numeric(), nullable=True),
        sa.Column('longitude', sa.Numeric(), nullable=True),
        sa.Column('contactName', sa.String(), nullable=True),
        sa.Column('contactPhone', sa.String(), nullable=True),
        sa.Column('serviceProvider', sa.String(), nullable=True),
        sa.Column('providerPhone', sa.String(), nullable=True),
        sa.Column('estimatedArrival', sa.DateTime(), nullable=True),
        sa.Column('estimatedCost', sa.Numeric(), nullable=True),
        sa.Column('status', sa.String(), nullable=True, default='requested'),
        sa.Column('requestedAt', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('dispatchedAt', sa.DateTime(), nullable=True),
        sa.Column('arrivedAt', sa.DateTime(), nullable=True),
        sa.Column('completedAt', sa.DateTime(), nullable=True),
        sa.Column('actualCost', sa.Numeric(), nullable=True),
        sa.Column('notes', sa.Text(), nullable=True),
        sa.Column('photos', sa.JSON(), nullable=True),
        sa.Column('documents', sa.JSON(), nullable=True),
        sa.Column('createdAt', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('updatedAt', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('createdBy', sa.String(), nullable=True),
        sa.Column('isActive', sa.Boolean(), nullable=True, default=True),
        sa.ForeignKeyConstraint(['companyId'], ['companies.id'], ),
        sa.ForeignKeyConstraint(['equipmentId'], ['equipment.id'], ),
        sa.ForeignKeyConstraint(['driverId'], ['drivers.id'], ),
        sa.ForeignKeyConstraint(['createdBy'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )

    # Create eld_compliance table
    op.create_table('eld_compliance',
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('companyId', sa.String(), nullable=False),
        sa.Column('driverId', sa.String(), nullable=False),
        sa.Column('equipmentId', sa.String(), nullable=False),
        sa.Column('date', sa.Date(), nullable=False),
        sa.Column('totalDrivingTime', sa.Integer(), nullable=True),
        sa.Column('totalOnDutyTime', sa.Integer(), nullable=True),
        sa.Column('totalOffDutyTime', sa.Integer(), nullable=True),
        sa.Column('totalSleeperTime', sa.Integer(), nullable=True),
        sa.Column('hasViolations', sa.Boolean(), nullable=True, default=False),
        sa.Column('violations', sa.JSON(), nullable=True),
        sa.Column('violationTypes', sa.JSON(), nullable=True),
        sa.Column('isCompliant', sa.Boolean(), nullable=True, default=True),
        sa.Column('complianceScore', sa.Integer(), nullable=True),
        sa.Column('auditStatus', sa.String(), nullable=True, default='pending'),
        sa.Column('aiAuditResults', sa.JSON(), nullable=True),
        sa.Column('aiRecommendations', sa.Text(), nullable=True),
        sa.Column('aiConfidence', sa.Numeric(), nullable=True),
        sa.Column('exportedAt', sa.DateTime(), nullable=True),
        sa.Column('exportFormat', sa.String(), nullable=True),
        sa.Column('exportUrl', sa.String(), nullable=True),
        sa.Column('createdAt', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('updatedAt', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('isActive', sa.Boolean(), nullable=True, default=True),
        sa.ForeignKeyConstraint(['companyId'], ['companies.id'], ),
        sa.ForeignKeyConstraint(['driverId'], ['drivers.id'], ),
        sa.ForeignKeyConstraint(['equipmentId'], ['equipment.id'], ),
        sa.PrimaryKeyConstraint('id')
    )

    # Create safer_data table
    op.create_table('safer_data',
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('companyId', sa.String(), nullable=False),
        sa.Column('dotNumber', sa.String(), nullable=False),
        sa.Column('legalName', sa.String(), nullable=False),
        sa.Column('dbaName', sa.String(), nullable=True),
        sa.Column('address', sa.String(), nullable=True),
        sa.Column('city', sa.String(), nullable=True),
        sa.Column('state', sa.String(), nullable=True),
        sa.Column('zipCode', sa.String(), nullable=True),
        sa.Column('country', sa.String(), nullable=True, default='US'),
        sa.Column('safetyRating', sa.String(), nullable=True),
        sa.Column('safetyRatingDate', sa.Date(), nullable=True),
        sa.Column('previousSafetyRating', sa.String(), nullable=True),
        sa.Column('totalInspections', sa.Integer(), nullable=True, default=0),
        sa.Column('totalInspectionsWithViolations', sa.Integer(), nullable=True, default=0),
        sa.Column('totalViolations', sa.Integer(), nullable=True, default=0),
        sa.Column('totalOutOfServiceViolations', sa.Integer(), nullable=True, default=0),
        sa.Column('totalOutOfServiceViolationsPercentage', sa.Numeric(), nullable=True),
        sa.Column('totalCrashes', sa.Integer(), nullable=True, default=0),
        sa.Column('fatalCrashes', sa.Integer(), nullable=True, default=0),
        sa.Column('injuryCrashes', sa.Integer(), nullable=True, default=0),
        sa.Column('towAwayCrashes', sa.Integer(), nullable=True, default=0),
        sa.Column('totalVehicles', sa.Integer(), nullable=True, default=0),
        sa.Column('totalDrivers', sa.Integer(), nullable=True, default=0),
        sa.Column('lastReportGenerated', sa.DateTime(), nullable=True),
        sa.Column('reportUrl', sa.String(), nullable=True),
        sa.Column('portalUrl', sa.String(), nullable=True),
        sa.Column('createdAt', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('updatedAt', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('isActive', sa.Boolean(), nullable=True, default=True),
        sa.ForeignKeyConstraint(['companyId'], ['companies.id'], ),
        sa.PrimaryKeyConstraint('id')
    )

    # Create insurance_policies table
    op.create_table('insurance_policies',
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('companyId', sa.String(), nullable=False),
        sa.Column('policyNumber', sa.String(), nullable=False),
        sa.Column('policyType', sa.String(), nullable=False),
        sa.Column('insuranceProvider', sa.String(), nullable=False),
        sa.Column('agentName', sa.String(), nullable=True),
        sa.Column('agentPhone', sa.String(), nullable=True),
        sa.Column('agentEmail', sa.String(), nullable=True),
        sa.Column('coverageAmount', sa.Numeric(), nullable=False),
        sa.Column('deductible', sa.Numeric(), nullable=True),
        sa.Column('premium', sa.Numeric(), nullable=False),
        sa.Column('paymentFrequency', sa.String(), nullable=True),
        sa.Column('effectiveDate', sa.Date(), nullable=False),
        sa.Column('expirationDate', sa.Date(), nullable=False),
        sa.Column('renewalDate', sa.Date(), nullable=True),
        sa.Column('status', sa.String(), nullable=True, default='active'),
        sa.Column('isRenewed', sa.Boolean(), nullable=True, default=False),
        sa.Column('policyDocument', sa.String(), nullable=True),
        sa.Column('certificateOfInsurance', sa.String(), nullable=True),
        sa.Column('notes', sa.Text(), nullable=True),
        sa.Column('createdAt', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('updatedAt', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('createdBy', sa.String(), nullable=True),
        sa.Column('isActive', sa.Boolean(), nullable=True, default=True),
        sa.ForeignKeyConstraint(['companyId'], ['companies.id'], ),
        sa.ForeignKeyConstraint(['createdBy'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )

    # Create permit_books table
    op.create_table('permit_books',
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('companyId', sa.String(), nullable=False),
        sa.Column('equipmentId', sa.String(), nullable=True),
        sa.Column('permitNumber', sa.String(), nullable=False),
        sa.Column('permitType', sa.String(), nullable=False),
        sa.Column('issuingAuthority', sa.String(), nullable=False),
        sa.Column('state', sa.String(), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('route', sa.Text(), nullable=True),
        sa.Column('restrictions', sa.Text(), nullable=True),
        sa.Column('specialConditions', sa.Text(), nullable=True),
        sa.Column('issueDate', sa.Date(), nullable=False),
        sa.Column('expirationDate', sa.Date(), nullable=False),
        sa.Column('renewalDate', sa.Date(), nullable=True),
        sa.Column('permitFee', sa.Numeric(), nullable=True),
        sa.Column('processingFee', sa.Numeric(), nullable=True),
        sa.Column('totalFee', sa.Numeric(), nullable=True),
        sa.Column('status', sa.String(), nullable=True, default='active'),
        sa.Column('isRenewed', sa.Boolean(), nullable=True, default=False),
        sa.Column('permitDocument', sa.String(), nullable=True),
        sa.Column('applicationDocument', sa.String(), nullable=True),
        sa.Column('notes', sa.Text(), nullable=True),
        sa.Column('createdAt', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('updatedAt', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('createdBy', sa.String(), nullable=True),
        sa.Column('isActive', sa.Boolean(), nullable=True, default=True),
        sa.ForeignKeyConstraint(['companyId'], ['companies.id'], ),
        sa.ForeignKeyConstraint(['equipmentId'], ['equipment.id'], ),
        sa.ForeignKeyConstraint(['createdBy'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )

    # Create driver_hos_logs table
    op.create_table('driver_hos_logs',
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('companyId', sa.String(), nullable=False),
        sa.Column('driverId', sa.String(), nullable=False),
        sa.Column('equipmentId', sa.String(), nullable=False),
        sa.Column('logDate', sa.Date(), nullable=False),
        sa.Column('drivingTime', sa.Integer(), nullable=True, default=0),
        sa.Column('onDutyTime', sa.Integer(), nullable=True, default=0),
        sa.Column('offDutyTime', sa.Integer(), nullable=True, default=0),
        sa.Column('sleeperTime', sa.Integer(), nullable=True, default=0),
        sa.Column('hasRequiredBreaks', sa.Boolean(), nullable=True, default=True),
        sa.Column('breakViolations', sa.JSON(), nullable=True),
        sa.Column('elevenHourCompliant', sa.Boolean(), nullable=True, default=True),
        sa.Column('elevenHourViolations', sa.JSON(), nullable=True),
        sa.Column('fourteenHourCompliant', sa.Boolean(), nullable=True, default=True),
        sa.Column('fourteenHourViolations', sa.JSON(), nullable=True),
        sa.Column('seventyHourCompliant', sa.Boolean(), nullable=True, default=True),
        sa.Column('seventyHourViolations', sa.JSON(), nullable=True),
        sa.Column('thirtyFourHourCompliant', sa.Boolean(), nullable=True, default=True),
        sa.Column('thirtyFourHourViolations', sa.JSON(), nullable=True),
        sa.Column('eldDeviceId', sa.String(), nullable=True),
        sa.Column('eldProvider', sa.String(), nullable=True),
        sa.Column('dataTransferStatus', sa.String(), nullable=True),
        sa.Column('isCompliant', sa.Boolean(), nullable=True, default=True),
        sa.Column('violations', sa.JSON(), nullable=True),
        sa.Column('violationCount', sa.Integer(), nullable=True, default=0),
        sa.Column('notes', sa.Text(), nullable=True),
        sa.Column('createdAt', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('updatedAt', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('isActive', sa.Boolean(), nullable=True, default=True),
        sa.ForeignKeyConstraint(['companyId'], ['companies.id'], ),
        sa.ForeignKeyConstraint(['driverId'], ['drivers.id'], ),
        sa.ForeignKeyConstraint(['equipmentId'], ['equipment.id'], ),
        sa.PrimaryKeyConstraint('id')
    )

    # Create banking_customers table
    op.create_table('banking_customers',
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('company_id', sa.String(), nullable=False),
        sa.Column('synctera_person_id', sa.String(255), nullable=True),
        sa.Column('synctera_business_id', sa.String(255), nullable=True),
        sa.Column('legal_name', sa.String(255), nullable=False),
        sa.Column('ein', sa.String(20), nullable=False),
        sa.Column('business_address', sa.Text(), nullable=False),
        sa.Column('business_city', sa.String(100), nullable=False),
        sa.Column('business_state', sa.String(50), nullable=False),
        sa.Column('business_zip_code', sa.String(20), nullable=False),
        sa.Column('naics_code', sa.String(10), nullable=False),
        sa.Column('website', sa.String(255), nullable=True),
        sa.Column('control_person_name', sa.String(255), nullable=False),
        sa.Column('kyb_status', sa.String(50), nullable=True, default='pending'),
        sa.Column('kyb_submitted_at', sa.DateTime(), nullable=True),
        sa.Column('kyb_approved_at', sa.DateTime(), nullable=True),
        sa.Column('kyb_rejection_reason', sa.Text(), nullable=True),
        sa.Column('status', sa.String(50), nullable=True, default='active'),
        sa.Column('created_at', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_banking_customers_synctera_person_id'), 'banking_customers', ['synctera_person_id'], unique=True)
    op.create_index(op.f('ix_banking_customers_synctera_business_id'), 'banking_customers', ['synctera_business_id'], unique=True)

    # Create banking_accounts table
    op.create_table('banking_accounts',
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('customer_id', sa.String(), nullable=False),
        sa.Column('synctera_account_id', sa.String(255), nullable=True),
        sa.Column('account_type', sa.String(50), nullable=False),
        sa.Column('account_number', sa.String(255), nullable=True),
        sa.Column('routing_number', sa.String(255), nullable=True),
        sa.Column('account_name', sa.String(255), nullable=False),
        sa.Column('available_balance', sa.Float(), nullable=True, default=0.0),
        sa.Column('current_balance', sa.Float(), nullable=True, default=0.0),
        sa.Column('pending_balance', sa.Float(), nullable=True, default=0.0),
        sa.Column('status', sa.String(50), nullable=True, default='active'),
        sa.Column('created_at', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['customer_id'], ['banking_customers.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_banking_accounts_synctera_account_id'), 'banking_accounts', ['synctera_account_id'], unique=True)

    # Create banking_cards table
    op.create_table('banking_cards',
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('account_id', sa.String(), nullable=False),
        sa.Column('synctera_card_id', sa.String(255), nullable=True),
        sa.Column('card_type', sa.String(50), nullable=False),
        sa.Column('card_number', sa.String(255), nullable=True),
        sa.Column('last_four', sa.String(4), nullable=True),
        sa.Column('expiry_date', sa.String(7), nullable=True),
        sa.Column('cvv', sa.String(255), nullable=True),
        sa.Column('card_name', sa.String(255), nullable=False),
        sa.Column('assigned_to', sa.String(255), nullable=True),
        sa.Column('daily_limit', sa.Float(), nullable=True),
        sa.Column('monthly_limit', sa.Float(), nullable=True),
        sa.Column('restrictions', sa.JSON(), nullable=True),
        sa.Column('status', sa.String(50), nullable=True, default='active'),
        sa.Column('is_enabled', sa.Boolean(), nullable=True, default=True),
        sa.Column('created_at', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['account_id'], ['banking_accounts.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_banking_cards_synctera_card_id'), 'banking_cards', ['synctera_card_id'], unique=True)

    # Create banking_transactions table
    op.create_table('banking_transactions',
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('account_id', sa.String(), nullable=False),
        sa.Column('card_id', sa.String(), nullable=True),
        sa.Column('synctera_transaction_id', sa.String(255), nullable=True),
        sa.Column('amount', sa.Float(), nullable=False),
        sa.Column('type', sa.String(50), nullable=False),
        sa.Column('category', sa.String(100), nullable=True),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('merchant_name', sa.String(255), nullable=True),
        sa.Column('merchant_category', sa.String(100), nullable=True),
        sa.Column('reference_id', sa.String(255), nullable=True),
        sa.Column('transaction_date', sa.DateTime(), nullable=False),
        sa.Column('posted_date', sa.DateTime(), nullable=True),
        sa.Column('status', sa.String(50), nullable=True, default='pending'),
        sa.Column('transaction_metadata', sa.JSON(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.ForeignKeyConstraint(['account_id'], ['banking_accounts.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['card_id'], ['banking_cards.id'], ondelete='SET NULL'),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_banking_transactions_synctera_transaction_id'), 'banking_transactions', ['synctera_transaction_id'], unique=True)

    # Create banking_transfers table
    op.create_table('banking_transfers',
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('from_account_id', sa.String(), nullable=False),
        sa.Column('to_account_id', sa.String(), nullable=True),
        sa.Column('synctera_transfer_id', sa.String(255), nullable=True),
        sa.Column('amount', sa.Float(), nullable=False),
        sa.Column('transfer_type', sa.String(50), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('recipient_name', sa.String(255), nullable=True),
        sa.Column('recipient_account', sa.String(255), nullable=True),
        sa.Column('recipient_routing', sa.String(255), nullable=True),
        sa.Column('status', sa.String(50), nullable=True, default='pending'),
        sa.Column('scheduled_date', sa.DateTime(), nullable=True),
        sa.Column('completed_date', sa.DateTime(), nullable=True),
        sa.Column('transfer_metadata', sa.JSON(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['from_account_id'], ['banking_accounts.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['to_account_id'], ['banking_accounts.id'], ondelete='SET NULL'),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_banking_transfers_synctera_transfer_id'), 'banking_transfers', ['synctera_transfer_id'], unique=True)

    # Create conversations table
    op.create_table('conversations',
        sa.Column('id', sa.String(36), nullable=False),
        sa.Column('company_id', sa.String(36), nullable=False),
        sa.Column('participant1_id', sa.String(36), nullable=False),
        sa.Column('participant2_id', sa.String(36), nullable=False),
        sa.Column('participant1_type', sa.String(10), nullable=False),
        sa.Column('participant2_type', sa.String(10), nullable=False),
        sa.Column('last_message_at', sa.DateTime(), nullable=True),
        sa.Column('message_count', sa.Integer(), nullable=True, default=0),
        sa.Column('created_at', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('updated_at', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('created_by', sa.String(36), nullable=False),
        sa.Column('created_by_type', sa.String(10), nullable=False),
        sa.Column('is_active', sa.Boolean(), nullable=True, default=True),
        sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
        sa.PrimaryKeyConstraint('id')
    )

    # Create conversation_read_status table
    op.create_table('conversation_read_status',
        sa.Column('id', sa.String(36), nullable=False),
        sa.Column('conversation_id', sa.String(36), nullable=False),
        sa.Column('participant_id', sa.String(36), nullable=False),
        sa.Column('participant_type', sa.String(10), nullable=False),
        sa.Column('company_id', sa.String(36), nullable=False),
        sa.Column('last_read_at', sa.DateTime(), nullable=True),
        sa.Column('unread_count', sa.Integer(), nullable=True, default=0),
        sa.Column('created_at', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('updated_at', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ),
        sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
        sa.PrimaryKeyConstraint('id')
    )

    # Create messages table
    op.create_table('messages',
        sa.Column('id', sa.String(36), nullable=False),
        sa.Column('conversation_id', sa.String(36), nullable=False),
        sa.Column('sender_id', sa.String(36), nullable=False),
        sa.Column('sender_type', sa.String(10), nullable=False),
        sa.Column('company_id', sa.String(36), nullable=False),
        sa.Column('content', sa.Text(), nullable=False),
        sa.Column('message_type', sa.String(), nullable=False, default='text'),
        sa.Column('reply_to_message_id', sa.String(36), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=True, default=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('updated_at', sa.DateTime(), nullable=True, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ),
        sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
        sa.ForeignKeyConstraint(['reply_to_message_id'], ['messages.id'], ),
        sa.PrimaryKeyConstraint('id')
    )


def downgrade() -> None:
    # Drop tables in reverse order to handle foreign key constraints
    op.drop_table('documents')
    op.drop_table('invoices')
    op.drop_table('bills')
    op.drop_table('vendors')
    op.drop_table('customers')
    op.drop_table('employees')
    op.drop_table('equipment')
    op.drop_table('trucks')
    op.drop_table('drivers')
    op.drop_table('users')
    op.drop_table('companies')
